name: Build Electron App

on:
  push:
    branches: [ main, develop, 'fix/**', 'feature/**' ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux
            arch: x64
            
          - os: windows-latest
            platform: win
            arch: x64
            
          - os: macos-latest
            platform: mac
            arch: universal
            
          - os: macos-13
            platform: mac
            arch: x64

    runs-on: ${{ matrix.os }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          repository: goanpeca/core
          ref: fix/imports

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        working-directory: examples/electron
        run: npm install

      - name: Run tests
        working-directory: examples/electron
        run: npm test
        continue-on-error: true

      # Linux Build
      - name: Build for Linux
        if: matrix.platform == 'linux'
        working-directory: examples/electron
        run: |
          npm run build
          npm run dist:linux
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Linux artifacts
        if: matrix.platform == 'linux'
        uses: actions/upload-artifact@v4
        with:
          name: datalayer-desktop-linux-x64
          path: |
            examples/electron/dist-electron/*.AppImage
            examples/electron/dist-electron/*.deb
            examples/electron/dist-electron/*.rpm
            examples/electron/dist-electron/*.tar.gz
          retention-days: 30

      # Windows Build
      - name: Build for Windows
        if: matrix.platform == 'win'
        working-directory: examples/electron
        run: |
          npm run build
          npm run dist:win
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Windows artifacts
        if: matrix.platform == 'win'
        uses: actions/upload-artifact@v4
        with:
          name: datalayer-desktop-windows-x64
          path: |
            examples/electron/dist-electron/*.exe
            examples/electron/dist-electron/*.msi
            examples/electron/dist-electron/*.nsis.7z
          retention-days: 30

      # macOS Universal Build (Apple Silicon + Intel)
      - name: Build for macOS Universal
        if: matrix.platform == 'mac' && matrix.arch == 'universal'
        working-directory: examples/electron
        run: |
          npm run build
          npm run dist:mac
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CSC_IDENTITY_AUTO_DISCOVERY: false

      - name: Upload macOS Universal artifacts
        if: matrix.platform == 'mac' && matrix.arch == 'universal'
        uses: actions/upload-artifact@v4
        with:
          name: datalayer-desktop-macos-universal
          path: |
            examples/electron/dist-electron/*.dmg
            examples/electron/dist-electron/*.zip
          retention-days: 30

      # macOS x64 Build (Intel only)
      - name: Build for macOS x64
        if: matrix.platform == 'mac' && matrix.arch == 'x64'
        working-directory: examples/electron
        run: |
          npm run build
          npm run dist:mac-intel
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CSC_IDENTITY_AUTO_DISCOVERY: false

      - name: Upload macOS x64 artifacts
        if: matrix.platform == 'mac' && matrix.arch == 'x64'
        uses: actions/upload-artifact@v4
        with:
          name: datalayer-desktop-macos-x64
          path: |
            examples/electron/dist-electron/*.dmg
            examples/electron/dist-electron/*.zip
          retention-days: 30
